@using Blazored.LocalStorage


@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation

<div class="page">
    <div >
        <!--<NavMenu />-->
    </div>

    <main>
        <!-- <div class="top-row px-4 d-flex justify-content-end align-items-center">
            @if (isLoggedIn)
            {
                <span class="welcome-text">Selamat datang, Admin</span>
                <img src="images/logout.png" class="icon-img" @onclick="ShowLogoutModal" title="Klik untuk logout" alt="Logout" />
            }
            else
            {
                <img src="images/user.png" class="icon-img" @onclick="GoToLogin" title="Klik untuk login" alt="Login" />
            }
        </div> -->

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<!-- Modal Logout -->
@if (showLogoutModal)
{
    <div class="modal-overlay">
        <div class="modal-box">
            <p>Apakah Anda akan log out?</p>
            <div class="modal-buttons">
                <button class="btn-yes" @onclick="Logout">Yes</button>
                <button class="btn-no" @onclick="CloseLogoutModal">No</button>
            </div>
        </div>
    </div>
}

<style>
    .top-row {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        padding: 10px;
        background: linear-gradient(to right, green, darkgreen);
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

    .welcome-text {
        color: white;
        margin-right: 10px;
        font-weight: bold;
    }

    .icon-img {
        width: 35px;
        height: 35px;
        cursor: pointer;
        margin-left: 10px;
        transition: transform 0.2s ease-in-out;
    }

        .icon-img:hover {
            transform: scale(1.1);
        }

    /* Modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-box {
        background: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

    .modal-buttons {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 15px;
    }

    .btn-yes, .btn-no {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }

    .btn-yes {
        background: #dc3545;
        color: white;
    }

    .btn-no {
        background: #6c757d;
        color: white;
    }

    .btn-yes:hover {
        background: #c82333;
    }

    .btn-no:hover {
        background: #5a6268;
    }
</style>

@code {
    private bool isLoggedIn = false;
    private bool showLogoutModal = false;

    protected override async Task OnInitializedAsync()
    {
        await CheckLoginStatus();
    }

    private async Task CheckLoginStatus()
    {
        var user = await LocalStorage.GetItemAsStringAsync("currentUser");
        isLoggedIn = !string.IsNullOrEmpty(user);
        StateHasChanged(); // Paksa UI untuk memperbarui
    }

    private void GoToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void ShowLogoutModal()
    {
        showLogoutModal = true;
    }

    private void CloseLogoutModal()
    {
        showLogoutModal = false;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("currentUser");
        isLoggedIn = false;
        showLogoutModal = false;
        Navigation.NavigateTo("/");
        StateHasChanged();
    }
}
