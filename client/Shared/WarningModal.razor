<div class="modal-overlay" style="@(IsOpen ? "display: flex;" : "display: none;")">
    <div class="modal-content">
        <img src="@ImageSrc" alt="Warning" class="warning-icon" />
        <h3>Peringatan</h3>
        <p>@Message</p>
        <button class="btn-close" @onclick="CloseModal">OK</button>
    </div>
</div>

<style>
    .modal-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        width: 90%;
        max-width: 320px;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 15px;
    }

    .warning-icon {
        width: 70px;
        height: 70px;
    }

    .btn-close {
        padding: 10px 40px;
        border: none;
        background: linear-gradient(90deg, #28a745, #218838);
        color: white;
        border-radius: 25px;
        cursor: pointer;
        font-size: 14px;
        font-weight: bold;
        transition: all 0.3s ease-in-out;
    }

        .btn-close:hover {
            background: linear-gradient(90deg, #218838, #1e7e34);
            transform: scale(1.05);
        }
</style>

@code {
    [Parameter] public string Message { get; set; } = "Pesan peringatan.";
    [Parameter] public string ImageSrc { get; set; } = "images/not-found.png"; // Parameter untuk gambar
    [Parameter] public EventCallback OnClose { get; set; }

    private bool IsOpen { get; set; } = false;

    public void Show(string message, string? imageSrc = null)
    {
        Message = message;
        ImageSrc = imageSrc ?? "images/not-found.png"; // Jika tidak diisi, pakai default
        IsOpen = true;
        StateHasChanged();
    }

    private async void CloseModal()
    {
        IsOpen = false;
        await OnClose.InvokeAsync();
    }
}